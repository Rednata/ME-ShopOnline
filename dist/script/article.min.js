/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
var __webpack_exports__ = {};

;// CONCATENATED MODULE: ./src/script/modules/createElementsBlog.js

// ===================== BLOG ==========================

const headerPage = document.querySelector('.header');
// const footerPage = document.querySelector('.footer');
const mainPage = document.querySelector('main');
const createSection = () => {
  const section = document.createElement('section');
  section.classList.add('section', 'container');
  return section;
};
const createUl = () => {
  const ul = document.createElement('ul');
  ul.classList.add('blog');
  return ul;
};
const createPost = ({
  title,
  id
}) => {
  const li = document.createElement('li');
  li.classList.add('blog-item');

  // const linkPost = `article.html?id=${id}`;
  li.insertAdjacentHTML('afterbegin', `
        <a class="blog-item__link" href="article.html?id=${id}" target="_blank">

        <picture>
          <source srcset="assets/images/Rectangle.avif" type="image/avif">
          <source srcset="assets/images/Rectangle.webp" type="image/webp">
          <img class="blog-item__image" src="./assets/images/Rectangle.jpg" alt="">
        </picture>

          
        </a> 
        <div class="blog-item__content">
          <a class="blog-item__link" href="article.html?id=${id}" target="_blank">
            <h2 class="blog-item__title">${title}</h2>
          </a>

          <div class="info">
          <span class="info__date">22 октября 2021, 12:45</span>
          <div class="info-wrap">
            <div class="info__view">
              <span class="info__img info__img_view"></span>
              <p class="info__count">1.2K</p>              
            </div>
            <div class="info__comments">
              <span class="info__img info__img_comments"></span>
              <p class="info__count">0</p>              
            </div>
          </div>
          </div>          

        </div>  
      `);
  return li;
};
const renderPost = postList => {
  const data = postList.map(post => createPost(post));
  return data;
};

// ================  PAGINATION  ========================
const createPaginationWrap = () => {
  const paginationWrap = document.createElement('div');
  paginationWrap.classList.add('pagination');
  paginationWrap.insertAdjacentHTML('afterbegin', `    
        <a class="arrow arrow_left"></a>
        <div class="pagination-group">
        </div>
        <a class="arrow arrow_right"></a>    
      `);
  return paginationWrap;
};
const createElementsBlog_createPaginationNumber = (paginationWrap, currentPage, startPage) => {
  startPage ||= currentPage;
  const pagination = paginationWrap.querySelector('.pagination-group');
  pagination.innerHTML = '';
  const pages = [];
  for (let i = startPage; i < startPage + 3; i++) {
    const link = document.createElement('a');
    link.className = 'pagination__page';
    if (i === currentPage) {
      link.classList.add('active');
    }
    link.setAttribute('data-number', `${i}`);
    link.href = `blog.html?page=${i}`;
    link.textContent = i;
    pages.push(link);
  }
  pagination.append(...pages);
  return pagination;
};
const createElementsBlog_createBlogPage = (postList, currentPage) => {
  const section = createSection();
  const blog = createUl();
  blog.append(...renderPost(postList.data));
  section.append(blog);
  const breadcrumb = document.createElement('div');
  breadcrumb.classList.add('bread');
  breadcrumb.insertAdjacentHTML('afterbegin', `<ul class="nav-breadcrumb">
          <li class="nav-breadcrumb__li">
            <a class="nav-breadcrumb__main" href="index.html">Главная</a>
          </li>
          <li class="nav-breadcrumb__li">
            <a class="goBlog" href="blog.html">Блог</a>
          </li>           
        </ul>
      `);
  headerPage.append(breadcrumb);
  const paginationWrap = createPaginationWrap();
  const pagination = createElementsBlog_createPaginationNumber(paginationWrap, currentPage);
  section.append(paginationWrap);
  mainPage.append(section);
  return {
    pagination
  };
};

// ============  ARTICLE ================
const articleWrap = document.createElement('div');
articleWrap.classList.add('articleWrap', 'container');
const createHeader = title => {
  const breadcrumb = document.createElement('div');
  breadcrumb.classList.add('bread');
  breadcrumb.insertAdjacentHTML('afterbegin', `<ul class="nav-breadcrumb">
          <li class="nav-breadcrumb__li">
            <a class="nav-breadcrumb__main" href="index.html">Главная</a>
          </li>
          <li class="nav-breadcrumb__li">
            <a class="goBlog" href="blog.html">Блог</a>
          </li>
          <li class="nav-breadcrumb__li nav-breadcrumb__title">${title}
          </li>      
        </ul>
      `);
  return breadcrumb;
};
const createMain = (title, body) => {
  const section = document.createElement('section');
  section.insertAdjacentHTML('afterbegin', `
        <article class="article">
          <h1 class="title article__title">${title}</h1>
          <p class="article__text">${body}</p>
        </article>
      `);
  return section;
};
const createAside = () => {
  const aside = document.createElement('aside');
  aside.className = 'aside';
  aside.insertAdjacentHTML('afterbegin', `
        <img src="assets/images/add.jpg" alt="" class="article__img">
        <img src="assets/images/add.jpg" alt="" class="article__img">
      `);
  return aside;
};
const createFooter = author => {
  const nameAuthor = author.data.name || '';
  const footer = document.createElement('footer');
  footer.classList.add('footer-article');
  footer.insertAdjacentHTML('afterbegin', `
        <a class="footer-article__back" href="blog.html">К списку статей</a>
          <div class="footer-article__about">
          <div class="footer-article__author">
            ${nameAuthor}
          </div>

          <div class="info info_article">
          <span class="info__date">22 октября 2021, 12:45</span>
          <div class="info-wrap">
            <div class="info__view">
              <span class="info__img info__img_view"></span>
              <p class="info__count">1.2K</p>              
            </div>
            <div class="info__comments">
              <span class="info__img info__img_comments"></span>
              <p class="info__count">0</p>              
            </div>
          </div>
          </div> 
          
        </div>
      `);
  // const main = document.querySelector('.main');
  // mainPage.append(footer);
  articleWrap.append(footer);
};
const createArticlePage = articleData => {
  const {
    title,
    body,
    user_id
  } = articleData;
  const header = createHeader(title);
  const section = createMain(title, body);
  const aside = createAside();
  loadAuthor(user_id);

  // console.log('footer: ', footer);

  articleWrap.append(aside, section);
  headerPage.append(header);
  mainPage.append(articleWrap);
};

;// CONCATENATED MODULE: ./src/script/modules/paginationFunc.js

const getStartPage = pagination => +pagination.firstElementChild.dataset.number;
const changePageNumber = (paginationWrap, startPage, currentPage, arrowDirect) => {
  if (arrowDirect === 'left') {
    if (startPage <= 1) {
      createPaginationNumber(paginationWrap, currentPage, 1);
    } else {
      createPaginationNumber(paginationWrap, currentPage, startPage - 1);
    }
  } else {
    createPaginationNumber(paginationWrap, currentPage, startPage + 1);
  }
};
const paginationFunc_onClickArrow = queryParams => {
  const paginationWrap = document.querySelector('.pagination');
  const pagination = document.querySelector('.pagination-group');
  paginationWrap.addEventListener('click', e => {
    if (e.target.closest('.arrow_left')) {
      e.preventDefault();
      const startPage = getStartPage(pagination);
      const currentPage = +queryParams.slice(6);
      changePageNumber(paginationWrap, startPage, currentPage, 'left');
    }
    if (e.target.closest('.arrow_right')) {
      e.preventDefault();
      const startPage = getStartPage(pagination);
      const currentPage = +queryParams.slice(6);
      changePageNumber(paginationWrap, startPage, currentPage, 'right');
    }
  });
};

;// CONCATENATED MODULE: ./src/script/modules/fetch.js


const loadPosts = async currentPage => {
  // document.body.innerHTML = '';

  const url = new URL(window.location);
  const queryParams = url.search;
  currentPage = +queryParams.slice(6) || 1;
  const response = await fetch(`https://gorest.co.in/public-api/posts${queryParams}`);
  const postList = await response.json();
  createBlogPage(postList, currentPage);
  onClickArrow(queryParams);
};
const loadArticle = async () => {
  const url = new URL(window.location);
  const queryParams = url.search.slice(4);
  const response = await fetch(`https://gorest.co.in/public-api/posts/${queryParams}`);
  const articleData = await response.json();
  createArticlePage(articleData.data);
};
const loadAuthor = async userID => {
  const response = await fetch(`https://gorest.co.in/public-api/users/${userID}`);
  const author = await response.json();
  createFooter(author);
};

;// CONCATENATED MODULE: ./src/script/modules/showNavigation.js
const showNavigation = () => {
  console.log('SHOW MUST GO ON!');
  const navFooter = document.querySelector('.navFooter');
  const navTitleCatalog = navFooter.querySelector('.nav__item_catalog').firstElementChild;
  const navTitleBuyer = navFooter.querySelector('.nav__item_buyer').firstElementChild;
  const catalog = navFooter.querySelector('.sublist_catalog');
  const buyer = navFooter.querySelector('.sublist_buyer');
  navTitleCatalog.addEventListener('click', () => {
    catalog.classList.toggle('sublist_show');
    const btnCatalog = navTitleCatalog.querySelector('.nav__btn');
    btnCatalog.classList.toggle('nav__btn_open');
  });
  navTitleBuyer.addEventListener('click', () => {
    buyer.classList.toggle('sublist_show');
    const btnBuyer = navTitleBuyer.querySelector('.nav__btn');
    btnBuyer.classList.toggle('nav__btn_open');
  });
};
const showHeaderMenu = () => {
  const menuBtn = document.querySelector('.menu');
  menuBtn.addEventListener('click', () => {
    document.querySelector('.header-nav').classList.toggle('header-nav_active');
  });
};
;// CONCATENATED MODULE: ./src/script/modules/fetchCard.js

const fetchGoods = async url => {
  const response = await fetch(url);
  const data = await response.json();
  return data;
};
const createHrefLink = (path, hash) => {
  const url = new URL(document.location);
  url.pathname = path;
  url.hash = hash;
  return url;
};
const createMenuItem = item => {
  const liItem = document.createElement('li');
  liItem.className = 'sublist__item';
  const link = document.createElement('a');
  link.className = 'sublist__link';
  const path = 'catalog.html';
  const hash = `#${item}`;
  const href = createHrefLink(path, hash);
  link.href = href;
  link.textContent = item;
  liItem.append(link);
  return liItem;
};
const renderMenu = async () => {
  const url = 'https://determined-painted-hawthorn.glitch.me/api/category';
  const categoriesData = await fetchGoods(url);
  const catalogeHeader = document.querySelector('.header .sublist_catalog');
  const catalogeFooter = document.querySelector('.footer .sublist_catalog');
  const dataLiHeader = categoriesData.map(item => createMenuItem(item));
  const dataLiFooter = categoriesData.map(item => createMenuItem(item));
  catalogeHeader.append(...dataLiHeader);
  catalogeFooter.append(...dataLiFooter);
};
const getHashFromURL = () => {
  const url = decodeURI(document.location.hash);
  return url.slice(1);
};
const renderCatalog = async () => {
  const catalogName = getHashFromURL();
  const title = createTitle('catalog__title', catalogName);
  const url = `https://determined-painted-hawthorn.glitch.me/api/goods/category/${catalogName}`;
  const catalogDate = await fetchGoods(url);
  const catalog = createCatalog(catalogDate);
  const sectionCatalog = document.querySelector('.catalog__container');
  sectionCatalog.append(title, catalog);
};
const renderPageCard = async () => {
  const [category, goodID] = getHashFromURL().split('#');
  createBreadCrumb(category);
  const url = `https://determined-painted-hawthorn.glitch.me/api/goods/${goodID}`;
  const dataGood = await fetchGoods(url);
  const title = createTitle('good-card__title', dataGood.title);
  const cart = createCart(dataGood);
  const img = createImgCard(dataGood);
  const wrapCard = createElemWithClass('div', 'good-card__wrap');
  wrapCard.append(img, cart);
  const {
    title: titleDescript,
    content
  } = createDescript(dataGood);
  const urlCatalog = `https://determined-painted-hawthorn.glitch.me/api/goods/category/${dataGood.category}`;
  const dataRecommend = await fetchGoods(urlCatalog);
  const cardContainer = document.querySelector('.good-card');
  cardContainer.append(title, wrapCard, titleDescript, content);
  const recomContainer = document.querySelector('.recommend');
  const {
    titleRecom,
    wrapRecom
  } = createRecommend(dataRecommend);
  recomContainer.append(titleRecom, wrapRecom);
};

;// CONCATENATED MODULE: ./src/script/article.js



const init = () => {
  loadArticle();
  showNavigation();
  showHeaderMenu();
  renderMenu();
};
init();
/******/ })()
;