/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
var __webpack_exports__ = {};

;// CONCATENATED MODULE: ./src/script/modules/showNavigation.js
const showNavigation = () => {
  console.log('SHOW MUST GO ON!');
  const navFooter = document.querySelector('.navFooter');
  const navTitleCatalog = navFooter.querySelector('.nav__item_catalog').firstElementChild;
  const navTitleBuyer = navFooter.querySelector('.nav__item_buyer').firstElementChild;
  const catalog = navFooter.querySelector('.sublist_catalog');
  const buyer = navFooter.querySelector('.sublist_buyer');
  navTitleCatalog.addEventListener('click', () => {
    catalog.classList.toggle('sublist_show');
    const btnCatalog = navTitleCatalog.querySelector('.nav__btn');
    btnCatalog.classList.toggle('nav__btn_open');
  });
  navTitleBuyer.addEventListener('click', () => {
    buyer.classList.toggle('sublist_show');
    const btnBuyer = navTitleBuyer.querySelector('.nav__btn');
    btnBuyer.classList.toggle('nav__btn_open');
  });
};
const showHeaderMenu = () => {
  const menuBtn = document.querySelector('.menu');
  menuBtn.addEventListener('click', () => {
    document.querySelector('.header-nav').classList.toggle('header-nav_active');
  });
};
;// CONCATENATED MODULE: ./src/script/modules/createCatalog&Cards.js

const createCatalog_Cards_createElemWithClass = (elem, className) => {
  const elemClass = document.createElement(elem);
  elemClass.className = className;
  return elemClass;
};
const createSaleIcon = (tegName, className, discount) => {
  const spanSale = createCatalog_Cards_createElemWithClass(tegName, className);
  spanSale.textContent = `-${discount}%`;
  return spanSale;
};
const createCatalogItem = ({
  id,
  price,
  title,
  image,
  discount,
  category
}) => {
  const li = createCatalog_Cards_createElemWithClass('li', 'benefit__item card');
  li.dataset.name = id;
  const path = 'card.html';
  const hash = `#${category}#${id}`;
  const href = createHrefLink(path, hash);
  const link = createCatalog_Cards_createElemWithClass('a', 'benefit__link');
  link.href = href;
  const wrapIMG = createCatalog_Cards_createElemWithClass('div', 'card-img__wrapper');
  const img = createCatalog_Cards_createElemWithClass('img', 'card__img');
  img.loading = 'lazy';
  img.width = '420';
  img.height = '295';
  if (image === 'image/notimage.jpg') {
    img.src = 'assets/images/no-photo.jpg';
  } else {
    img.src = `https://determined-painted-hawthorn.glitch.me/${image}`;
  }
  wrapIMG.append(img);
  const wrapPrice = createCatalog_Cards_createElemWithClass('div', 'card__price');
  const priceFinal = createCatalog_Cards_createElemWithClass('span', 'card__sale-price');
  priceFinal.textContent = `${price} ₽`;
  if (discount) {
    const saleIcon = createSaleIcon('span', 'card__sale', discount);
    wrapIMG.append(saleIcon);
    const priceStart = createCatalog_Cards_createElemWithClass('span', 'card__start-price');
    priceStart.textContent = `${price} ₽`;
    priceFinal.textContent = Math.round(price * (100 - discount) / 100) + ' ₽';
    wrapPrice.append(priceFinal, priceStart);
  } else {
    wrapPrice.append(priceFinal);
  }
  const itemTitle = createCatalog_Cards_createElemWithClass('p', 'card__title');
  itemTitle.textContent = title;
  link.append(wrapIMG, wrapPrice, title);
  li.append(link);
  return li;
};
const createCatalog_Cards_createTitle = (className, name) => {
  const title = createCatalog_Cards_createElemWithClass('h1', className);
  title.textContent = name;
  return title;
};
const createCatalog = data => {
  const catalogList = data.map(item => createCatalogItem(item));
  const list = createCatalog_Cards_createElemWithClass('ul', 'benefit__list');
  list.append(...catalogList);
  return list;
};
const createCatalog_Cards_createBreadCrumb = category => {
  const breadCrumb = document.querySelector('.nav-breadcrumb');
  breadCrumb.lastElementChild.querySelector('a').textContent = category;
};
const createCatalog_Cards_createImgCard = ({
  discount,
  image
}) => {
  const imgBox = createCatalog_Cards_createElemWithClass('div', 'good-card__img-box');
  const img = createCatalog_Cards_createElemWithClass('img', 'good-card__img');
  // img.width = '420';
  // img.height = '295';
  if (image === 'image/notimage.jpg') {
    img.src = 'assets/images/no-photo.jpg';
  } else {
    img.src = `https://determined-painted-hawthorn.glitch.me/${image}`;
  }
  imgBox.append(img);
  if (discount) {
    const saleIcon = createSaleIcon('div', 'sale good-card__sale', discount);
    imgBox.append(saleIcon);
  }
  return imgBox;
};
const formatCartPrice = stringPrice => {
  const last = stringPrice % 1000;
  const first = Math.trunc(stringPrice / 1000);
  return String(first) + ' ' + (last || '000');
};
const createCatalog_Cards_createCart = ({
  price: priceStart,
  discount
}) => {
  let priceFinal = Math.round(priceStart * (100 - discount) / 100);
  if (String(priceFinal).length >= 4) {
    priceFinal = formatCartPrice(String(priceFinal));
  }
  if (String(priceStart).length >= 4) {
    priceStart = formatCartPrice(String(priceStart));
  }
  const cart = createCatalog_Cards_createElemWithClass('div', 'good-card__price good-price');
  cart.insertAdjacentHTML('afterbegin', `     
        <p class="good-price__credit">В кредит от 5600 ₽ </p>
        <button class="button good-price__btn">Добавить в корзину</button>
        <button class="good-price__favorite"></button>
        <div class="good-price__outer-box">
          <div class="good-price__inner-box">
            <p class="good-price__subtitle">
              Доставка
            </p>
            <p class="good-price__subtitle-detail">
              1-3 января
            </p>
          </div>
          <div class="good-price__inner-box">
            <p class="good-price__subtitle">
              Продавец
            </p>
            <p class="good-price__subtitle-detail">
              ShopOnline
            </p>          
          </div>
          </div>
          <button class="good-price__bell">Узнать о снижении цены</button>
        </div>
      `);
  const priceFinalElem = createCatalog_Cards_createElemWithClass('span', 'good-price__title');
  priceFinalElem.textContent = `${priceFinal} ₽`;
  cart.prepend(priceFinalElem);
  if (discount) {
    const priceStartElem = createCatalog_Cards_createElemWithClass('span', 'good-price__old-title');
    priceStartElem.textContent = `${priceStart} ₽`;
    priceFinalElem.after(priceStartElem);
  }
  return cart;
};
const createCatalog_Cards_createDescript = ({
  description
}) => {
  const title = createCatalog_Cards_createElemWithClass('h2', 'good-card__subtitle');
  title.textContent = 'Описание:';
  const content = createCatalog_Cards_createElemWithClass('p', 'good-card__description');
  content.textContent = description;
  return {
    title,
    content
  };
};
const createCatalog_Cards_createRecommend = data => {
  const titleRecom = createCatalog_Cards_createElemWithClass('p', 'recommend__title');
  titleRecom.textContent = 'Рекомендуем также';
  const wrapRecom = createCatalog_Cards_createElemWithClass('div', 'recommend__wrap');
  const listRecommend = createCatalog(data);
  wrapRecom.append(listRecommend);
  return {
    titleRecom,
    wrapRecom
  };
};

;// CONCATENATED MODULE: ./src/script/modules/fetchCard.js

const fetchGoods = async url => {
  const response = await fetch(url);
  const data = await response.json();
  return data;
};
const createHrefLink = (path, hash) => {
  const url = new URL(document.location);
  url.pathname = path;
  url.hash = hash;
  return url;
};
const createMenuItem = item => {
  const liItem = document.createElement('li');
  liItem.className = 'sublist__item';
  const link = document.createElement('a');
  link.className = 'sublist__link';
  const path = 'catalog.html';
  const hash = `#${item}`;
  const href = createHrefLink(path, hash);
  link.href = href;
  link.textContent = item;
  liItem.append(link);
  return liItem;
};
const renderMenu = async () => {
  const url = 'https://determined-painted-hawthorn.glitch.me/api/category';
  const categoriesData = await fetchGoods(url);
  const catalogeHeader = document.querySelector('.header .sublist_catalog');
  const catalogeFooter = document.querySelector('.footer .sublist_catalog');
  const dataLiHeader = categoriesData.map(item => createMenuItem(item));
  const dataLiFooter = categoriesData.map(item => createMenuItem(item));
  catalogeHeader.append(...dataLiHeader);
  catalogeFooter.append(...dataLiFooter);
};
const getHashFromURL = () => {
  const url = decodeURI(document.location.hash);
  return url.slice(1);
};
const renderCatalog = async () => {
  const catalogName = getHashFromURL();
  const title = createCatalog_Cards_createTitle('catalog__title', catalogName);
  const url = `https://determined-painted-hawthorn.glitch.me/api/goods/category/${catalogName}`;
  const catalogDate = await fetchGoods(url);
  const catalog = createCatalog(catalogDate);
  const sectionCatalog = document.querySelector('.catalog__container');
  sectionCatalog.append(title, catalog);
};
const renderPageCard = async () => {
  const [category, goodID] = getHashFromURL().split('#');
  createBreadCrumb(category);
  const url = `https://determined-painted-hawthorn.glitch.me/api/goods/${goodID}`;
  console.log(url);
  const dataGood = await fetchGoods(url);
  const title = createTitle('good-card__title', dataGood.title);
  const cart = createCart(dataGood);
  const img = createImgCard(dataGood);
  const wrapCard = createElemWithClass('div', 'good-card__wrap');
  wrapCard.append(img, cart);
  const {
    title: titleDescript,
    content
  } = createDescript(dataGood);
  const urlCatalog = `https://determined-painted-hawthorn.glitch.me/api/goods/category/${dataGood.category}`;
  const dataRecommend = await fetchGoods(urlCatalog);
  const cardContainer = document.querySelector('.good-card');
  cardContainer.append(title, wrapCard, titleDescript, content);
  const recomContainer = document.querySelector('.recommend');
  const {
    titleRecom,
    wrapRecom
  } = createRecommend(dataRecommend);
  recomContainer.append(titleRecom, wrapRecom);
  return dataGood;
};

;// CONCATENATED MODULE: ./src/script/catalog.js


const init = () => {
  showNavigation();
  showHeaderMenu();
  renderMenu();
  renderCatalog();
};
init();
/******/ })()
;